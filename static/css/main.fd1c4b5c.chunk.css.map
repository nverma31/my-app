{"version":3,"sources":["main.fd1c4b5c.chunk.css","components/header.scss","breakpoints.scss","varibles.scss","components/banner.scss","components/cases.scss","components/case.scss","App.scss"],"names":[],"mappings":"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","file":"main.fd1c4b5c.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css?family=Josefin+Sans:400,600,700&display=swap);\n.header{position:fixed;width:100%;height:128px;z-index:4}@media (max-width: 425px){.header{height:96px}}.header .logo a{font-size:1.2rem;letter-spacing:0.1rem;color:#000;text-decoration:none;font-weight:700}.header .nav{width:25px}@media (max-width: 425px){.header .nav{width:20px}}.header .nav span{margin-bottom:0.3rem;background:#000;height:2px;width:100%;display:block}.main{height:100vh;height:calc(1vh * 100);height:calc(var(--vh, 1vh) * 100);background-color:#fff}.main .row{flex-direction:column;justify-content:center}.main .row h2{font-size:3rem;line-height:4.2rem;font-weight:700;z-index:10;color:#fff;mix-blend-mode:difference}@media (max-width: 768px){.main .row h2{font-size:2.4rem;line-height:3rem}}@media (max-width: 425px){.main .row h2{margin-top:72px;font-size:1.7rem;line-height:2.2rem}}.main .row h2 .line{margin-bottom:8px;height:56px;position:relative;overflow:hidden}@media (max-width: 768px){.main .row h2 .line{height:48px}}@media (max-width: 425px){.main .row h2 .line{height:32px}}.main .row h2 .line span{position:absolute}.main .row .btn-row{position:absolute;bottom:200px;right:0;z-index:2;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.main .row .btn-row a{display:inline-block;font-size:1rem;color:#000;text-decoration:none;display:flex;align-items:center;font-weight:600}@media (max-width: 768px){.main .row .btn-row a{font-size:0.8rem}}@media (max-width: 425px){.main .row .btn-row a{font-size:0.7rem}}.main .row .btn-row a svg{margin-left:16px;border:2px solid #000;padding:12px;height:24px;width:24px;border-radius:100px;-webkit-transition:0.4s ease-in-out;transition:0.4s ease-in-out}@media (max-width: 768px){.main .row .btn-row a svg{padding:6px;width:20px;height:20px}}@media (max-width: 425px){.main .row .btn-row a svg{padding:4px;width:16px;height:16px}}.main .row .btn-row a:hover svg{background:#000;color:#fff}.cases{padding-top:15vh}.cases .row{padding-bottom:30vh;margin-left:4vw}.cases .row .upperoffset{margin-top:10vh}.cases .row .spaceXXL{margin-left:15vw}.cases .row .spaceL{margin-left:5vw}.cases .row .spaceXL{margin-left:10vw}.case{position:relative;cursor:pointer;width:25vw;height:50vh}.case:hover .case-image{opacity:0.4 !important}.case .case-details{padding-top:16px;box-sizing:border-box;position:relative}@media (max-width: 425px){.case .case-details{padding:16px}}@media (max-width: 768px){.case .case-details{width:100vw}}.case .case-details span{font-size:1.3rem;opacity:0.8;color:#000}@media (max-width: 1366px) and (min-width: 769px){.case .case-details span{font-size:1.3rem}}@media (max-width: 425px){.case .case-details span{font-size:1rem;line-height:1.9rem}}.case .case-details h2{font-size:1.4rem;margin-top:16px;color:#000;font-weight:600}@media (max-width: 1366px) and (min-width: 769px){.case .case-details h2{font-size:1.8rem}}@media (max-width: 425px){.case .case-details h2{font-size:1.4rem;margin-top:8px}}.case .container{width:25vw;margin:0 auto;display:flex;align-items:center;visibility:hidden}.case .case-image{width:25vw;height:100%;position:relative;overflow:hidden}.case .case-image:after{position:absolute;content:\"\";width:100%;height:100%;top:0;right:0}.case .case-image img{height:100%;width:100%;object-fit:cover}body,html{visibility:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background:#fff;-ms-scroll-chaining:none;overscroll-behavior:none;margin:0;font-family:\"Josefin Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.container{width:1560px;min-width:1560px;margin:0 auto;height:100%}@media (max-width: 1560px){.container{width:1280px;min-width:1280px}}@media (max-width: 1366px){.container{width:1080px;min-width:1080px}}@media (max-width: 1080px){.container{width:100%;min-width:100%}}.container .row{display:flex;height:100%;padding:0 32px}@media (max-width: 425px){.container .row{padding:0 16px}}.container .v-center{align-items:center}.container .space-between{justify-content:space-between}.container-fluid{width:100%;height:100%}.container-fluid .row{display:flex;height:100%}.intro-overlay .top{height:100vh;height:calc(1vh * 100);height:calc(var(--vh, 1vh) * 100);position:absolute;width:100%;z-index:8}.intro-overlay .top .overlay-top{position:absolute;height:100%;width:34.3333vw;background:#000;bottom:0;left:0;right:0}@media (max-width: 768px){.intro-overlay .top .overlay-top{width:100vw}}.intro-overlay .top .overlay-top:nth-child(2){left:33.3333%}@media (max-width: 768px){.intro-overlay .top .overlay-top:nth-child(2){display:none}}.intro-overlay .top .overlay-top:nth-child(3){left:66.6666%}@media (max-width: 768px){.intro-overlay .top .overlay-top:nth-child(3){display:none}}\n\n",".header {\n  position: fixed;\n  width: 100%;\n  height: 128px;\n  z-index: 4;\n  @include media(\"<=phone\") {\n    height: 96px;\n  }\n  .logo {\n    a {\n      font-size: 1.2rem;\n      letter-spacing: 0.1rem;\n      color: $black;\n      text-decoration: none;\n      font-weight: 700;\n    }\n  }\n  .nav {\n    width: 25px;\n    @include media(\"<=phone\") {\n      width: 20px;\n    }\n    span {\n      margin-bottom: 0.3rem;\n      background: $black;\n      height: 2px;\n      width: 100%;\n      display: block;\n    }\n  }\n}\n","$breakpoints: (\n  \"phone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","$black: #000000;\n$white: #ffffff;\n",".main {\n  height: 100vh;\n  height: calc(var(--vh, 1vh) * 100);\n  background-color: $white;\n  .row {\n    flex-direction: column;\n    justify-content: center;\n    h2 {\n      font-size: 3rem;\n      line-height: 4.2rem;\n      font-weight: 700;\n      z-index: 10;\n      color: $white;\n      mix-blend-mode: difference;\n      @include media(\"<=tablet\") {\n        font-size: 2.4rem;\n        line-height: 3rem;\n      }\n      @include media(\"<=phone\") {\n        margin-top: 72px;\n        font-size: 1.7rem;\n        line-height: 2.2rem;\n      }\n      .line {\n        margin-bottom: 8px;\n        height: 56px;\n        position: relative;\n        overflow: hidden;\n        @include media(\"<=tablet\") {\n          height: 48px;\n        }\n        @include media(\"<=phone\") {\n          height: 32px;\n        }\n        span {\n          position: absolute;\n        }\n      }\n    }\n    .btn-row {\n      position: absolute;\n      bottom: 200px;\n      right: 0;\n      z-index: 2;\n      transform-origin: 0 0;\n      transform: rotate(90deg);\n      a {\n        display: inline-block;\n        font-size: 1rem;\n        color: $black;\n        text-decoration: none;\n        display: flex;\n        align-items: center;\n        font-weight: 600;\n       \n        @include media(\"<=tablet\") {\n          font-size: 0.8rem;\n        }\n        @include media(\"<=phone\") {\n          font-size: 0.7rem;\n        }\n        svg {\n          margin-left: 16px;\n          border: 2px solid $black;\n          padding: 12px;\n          height: 24px;\n          width: 24px;\n          border-radius: 100px;\n          transition: 0.4s ease-in-out;\n          @include media(\"<=tablet\") {\n            padding: 6px;\n            width: 20px;\n            height: 20px;\n          }\n          @include media(\"<=phone\") {\n            padding: 4px;\n            width: 16px;\n            height: 16px;\n          }\n        }\n        &:hover {\n          svg {\n            background: $black;\n            color: $white;\n          }\n        }\n      }\n    }\n  }\n}\n",".cases {\n  padding-top: 15vh;\n  .row {\n    padding-bottom: 30vh;\n    margin-left: 4vw;\n    .upperoffset {\n      margin-top: 10vh;\n    }\n    .spaceXXL {\n      margin-left: 15vw;\n    }\n    .spaceL {\n      margin-left: 5vw;\n    }\n    .spaceXL {\n      margin-left: 10vw;\n    }\n  }\n}\n","\n      .case {\n        position: relative;\n        cursor: pointer;\n        width: 25vw;\n        height: 50vh;\n        &:hover {\n          .case-image {\n            opacity: 0.4 !important;\n          }\n        }\n        .case-details {\n          padding-top: 16px;\n  \n          box-sizing: border-box;\n          position: relative;\n          @include media(\"<=phone\") {\n            padding: 16px;\n          }\n          @include media(\"<=tablet\") {\n            width: 100vw;\n          }\n          span {\n            // margin-top: 156px;\n            font-size: 1.3rem;\n            opacity: 0.8;\n            color: $black;\n            @include media(\"<=desktop\", \">tablet\") {\n              font-size: 1.3rem;\n            }\n            @include media(\"<=phone\") {\n              font-size: 1rem;\n              line-height: 1.9rem;\n            }\n          }\n          h2 {\n            font-size: 1.4rem;\n            // width: 85%;\n            margin-top: 16px;\n            color: $black;\n            font-weight: 600;\n  \n            @include media(\"<=desktop\", \">tablet\") {\n              font-size: 1.8rem;\n            }\n            @include media(\"<=phone\") {\n              font-size: 1.4rem;\n              // line-height: 2.2rem;\n              margin-top: 8px;\n            }\n          }\n        }\n        .container {\n            width: 25vw;\n            margin: 0 auto;\n            display: flex;\n            align-items: center;\n            visibility: hidden;\n          }\n        .case-image {\n          width: 25vw;\n          height: 100%;\n          position: relative;\n          overflow: hidden;\n          &:after {\n            position: absolute;\n            content: \"\";\n            width: 100%;\n            height: 100%;\n            // background: #fff;\n            // opacity: 0.5;\n            top: 0;\n            right: 0;\n          }\n          // overflow: hidden;\n          // // position: absolute;\n          // opacity: 0.65;\n          // transition: 0.4s cubic-bezier(0.6, -0.05, 0.1, 0.99);\n          img {\n            height: 100%;\n            width: 100%;\n            object-fit: cover;\n          }\n        }\n      }\n  ","@import url(\"https://fonts.googleapis.com/css?family=Josefin+Sans:400,600,700&display=swap\");\n@import \"./varibles.scss\";\n@import \"./breakpoints.scss\";\n@import \"./components/header.scss\";\n@import \"./components/banner.scss\";\n@import \"./components/cases.scss\";\n@import \"./components/case.scss\";\n\n\nbody,\nhtml {\n  visibility: hidden;\n  user-select: none;\n  background: $white;\n  overscroll-behavior: none;\n  margin: 0;\n  font-family: \"Josefin Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n    \"Helvetica Neue\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.container {\n  width: 1560px;\n  min-width: 1560px;\n  margin: 0 auto;\n  height: 100%;\n  @include media(\"<=1560px\") {\n    width: 1280px;\n    min-width: 1280px;\n  }\n  @include media(\"<=desktop\") {\n    width: 1080px;\n    min-width: 1080px;\n  }\n  @include media(\"<=1080px\") {\n    width: 100%;\n    min-width: 100%;\n  }\n  .row {\n    display: flex;\n    height: 100%;\n    padding: 0 32px;\n    @include media(\"<=phone\") {\n      padding: 0 16px;\n    }\n  }\n  .v-center {\n    align-items: center;\n  }\n  .space-between {\n    justify-content: space-between;\n  }\n}\n\n.container-fluid {\n  width: 100%;\n  height: 100%;\n  .row {\n    display: flex;\n    height: 100%;\n  }\n}\n\n//intro overlays\n.intro-overlay {\n  .top {\n    height: 100vh;\n    height: calc(var(--vh, 1vh) * 100);\n    position: absolute;\n    width: 100%;\n    z-index: 8;\n    .overlay-top {\n      position: absolute;\n      height: 100%;\n      width: 34.3333vw;\n      background: $black;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      @include media(\"<=tablet\") {\n        width: 100vw;\n      }\n      &:nth-child(2) {\n        left: 33.3333%;\n        @include media(\"<=tablet\") {\n          display: none;\n        }\n      }\n      &:nth-child(3) {\n        left: 66.6666%;\n        @include media(\"<=tablet\") {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // .bottom {\n  //   height: 0vh;\n  //   height: calc(var(--vh, 1vh) * 0);\n  //   position: absolute;\n  //   bottom: 0;\n  //   width: 100%;\n  //   z-index: 8;\n  //   .overlay-bottom {\n  //     position: absolute;\n  //     height: 100%;\n  //     width: 33.3333vw;\n  //     background: $black;\n  //     bottom: 0;\n  //     right: 66.6666%;\n  //     &:nth-child(1) {\n  //       @include media(\"<=tablet\") {\n  //         right: 0%;\n  //         width: 100vw;\n  //       }\n  //     }\n  //     &:nth-child(2) {\n  //       right: 33.3333%;\n  //       @include media(\"<=tablet\") {\n  //         width: 100vw;\n  //         top: 100%;\n  //         right: 0%;\n  //       }\n  //     }\n  //     &:nth-child(3) {\n  //       right: 0%;\n  //       @include media(\"<=tablet\") {\n  //         width: 100vw;\n  //         top: 200%;\n  //         right: 0%;\n  //       }\n  //     }\n  //   }\n  // }\n}\n"]}